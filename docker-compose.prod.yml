version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
      - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
      - ARCJET_KEY=${ARCJET_KEY}
      - NEXT_PUBLIC_ARCJET_SITE_KEY=${NEXT_PUBLIC_ARCJET_SITE_KEY}
      - SESSION_SECRET=${SESSION_SECRET}
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: social_media_platform
      POSTGRES_USER: social_user_prod
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U social_user_prod -d social_media_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_prod_data:
    name: social_media_platform_prod_data 